ShaderType = Vertex;

Input vsIn{
    float3 position: Position;
    float3 normal: Normal;
    float2 texCoords: TexCoords;
};

Output vsOut{
    float4 position: SRV_POSITION;
    float3 normal: Normal;
    float2 texCoords: TexCoords;
};

uint calculateMoveOffset(uint toMove){
    return toMove * 2;
}

float4 move(float4 pos, uint toMove){
    if(toMove == 0){
        return pos;
    }
    pos.x = pos.x + calculateMoveOffset(toMove);
    pos.y = pos.y + calculateMoveOffset(toMove);
    pos.z = pos.z + calculateMoveOffset(toMove);
    return pos;
}

struct SomeData{
    float4 position;
    bool isMoving;
    uint id;
};

SomeData createExampleData();

SomeData createExampleData(){
    SomeData data;
    data.position = float4(0, 0, 0, 1);
    data.isMoving = 1;
    data.id = 1;
    return data;
}

void main(){
    float4 extPos = float4(vsIn.position, 1.0);
    vsOut.position = move(extPos, 1);
    vsOut.normal = vsIn.normal;
    vsOut.texCoords = vsIn.texCoords;
}
