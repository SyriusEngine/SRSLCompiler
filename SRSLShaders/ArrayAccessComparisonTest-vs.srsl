ShaderType = Vertex;

Input vsIn{
    float3 position: Position;
    float3 normal: Normal;
    float2 texCoords: TexCoords;
};

Output vsOut{
    float4 position: SRV_POSITION;
    float3 normal: Normal;
    float2 texCoords: TexCoords;
};

void main(){
    float4 f1 = float4(1.0f, 2.0f, 3.0f, 4.0f);
    float4 f2 = float4(5.0f, 6.0f, 7.0f, 8.0f);

    bool isEq = f1[0] == f2[0];
    bool isNe = f1.y != f2.y;
    bool4 isVecEq = f1 == f2;

    float4 f1Array[2] = {f1, f2};
    float4 f2Array[2] = {f2, f1};
    bool4 isVecArrayEq = f1Array[0] == f2Array[1];
    bool isVecArrayNe = f1Array[0][1] != f2Array[1][2];

    float4x4 uiMat1 = float4x4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);
    float4x4 uiMat2 = float4x4(16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1);
    bool4 isMatRowEq = uiMat1[2] == uiMat2[3];
    bool isMatElemNe = uiMat1[3][2] != uiMat2[3][2];

    float4x4 uiMat1Array[2] = {uiMat1, uiMat2};
    float4x4 uiMat2Array[2] = {uiMat2, uiMat1};

    bool4 isMatArrayRowEq = uiMat1Array[0][2] == uiMat2Array[1][3];
    bool isMatArrayElemNe = uiMat1Array[0][3][2] != uiMat2Array[1][3][2];
}